/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* constructFromPrePost(vector<int>& preorder, vector<int>& postorder) {
        int i=0,j=0;
        int n=preorder.size();
        stack<TreeNode*> st;
        TreeNode* root=new TreeNode(preorder[i]);
        st.push(root);
        i++;
        while(!st.empty() && i<n){
            if(i<n){
                TreeNode* cur=st.top();
                TreeNode* l=new TreeNode(preorder[i]);
                i++;
                if(cur->left==NULL){
                    cur->left=l;
                }
                else{
                    cur->right=l;
                }
                st.push(l);
            }
            while(!st.empty() && j<n && st.top()->val==postorder[j]){
                st.pop();
                j++;
            }
        }
        return root; 
    }
};
