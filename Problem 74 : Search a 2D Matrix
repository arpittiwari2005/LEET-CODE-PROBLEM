class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size() , n = matrix[0].size();
        int top = 0, btm = m-1;
        int r = -1;
        while (top <= btm){
            int mid = top + (btm-top)/2;
            int fst = matrix[mid][0];
            int lst = matrix[mid] [n-1];
            if(fst <= target && target <= lst){
                r = mid;
                break;
            }
            else if(target < fst){
                btm = mid-1;
            }
            else{
                top = mid+1;
            }
        }
        if(r == -1) return false;
        int left = 0, right = n-1;
        while(left <= right){
            int mid = left + (right - left)/2;
            int element = matrix[r][mid];
            if(element == target) return true;
            else if (element < target) left=mid+1;
            else right = mid-1;
        }
        return false;
    }
};
